services:
  db:
    image: postgres:latest
    container_name: postgres_dev_container
    restart: unless-stopped
    environment:
      POSTGRES_DB: brightpathdev
      POSTGRES_USER: brightpathdev
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data

  api:
    build: 
      context: .
      dockerfile: Dockerfile.dev  # Use a development-specific Dockerfile
    container_name: django_api_dev
    restart: unless-stopped
    environment:
      BRIGHTPATH_DB: brightpathdev
      BRIGHTPATH_USER: brightpathdev
      BRIGHTPATH_PASSWORD: password
      BRIGHTPATH_HOST: db
      BRIGHTPATH_PORT: 5432
      DEBUG: 'True'  # Enable Django debug mode
      DJANGO_SETTINGS_MODULE: BrightPathAPI.settings.development  # Use development settings
    depends_on:
      - db
    ports:
      - "8000:8000"  # Directly expose the API port for easier debugging
    volumes:
      - .:/app  # Mount the current directory into the container for live code changes
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"  

  client:
    build:
      context: ../client
      dockerfile: Dockerfile.dev  # Use a development-specific Dockerfile
    container_name: brightpath_client_dev
    restart: unless-stopped
    ports:
      - "3000:3000"  # Use the development port
    volumes:
      - ../client:/app  # Mount the source code for hot reloading
      - /app/node_modules  # Prevent overwriting node_modules with local version
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:8000  # Point to the API development server
    depends_on:
      - api
    command: npm start  # Use the development server command

volumes:
  postgres_dev_data:

networks:
  default:
    driver: bridge
